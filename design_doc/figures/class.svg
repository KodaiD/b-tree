<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="710px" preserveAspectRatio="none" style="width:994px;height:710px;background:#FFFFFF;" version="1.1" viewBox="0 0 994 710" width="994px" zoomAndPan="magnify"><defs><filter height="300%" id="ffoj3mazkzles" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[2425901ae39834300882f0a804c36fd7]
class BTree--><rect codeLine="2" fill="#FEFECE" filter="url(#ffoj3mazkzles)" height="235.2656" id="BTree" style="stroke:#A80036;stroke-width:1.5;" width="214" x="7" y="258.53"/><ellipse cx="91.75" cy="274.53" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M94.7188,280.1706 Q94.1406,280.4675 93.5,280.6081 Q92.8594,280.7644 92.1563,280.7644 Q89.6563,280.7644 88.3281,279.1238 Q87.0156,277.4675 87.0156,274.3425 Q87.0156,271.2175 88.3281,269.5613 Q89.6563,267.905 92.1563,267.905 Q92.8594,267.905 93.5,268.0613 Q94.1563,268.2175 94.7188,268.5144 L94.7188,271.2331 Q94.0938,270.655 93.5,270.3894 Q92.9063,270.1081 92.2813,270.1081 Q90.9375,270.1081 90.25,271.1863 Q89.5625,272.2488 89.5625,274.3425 Q89.5625,276.4363 90.25,277.5144 Q90.9375,278.5769 92.2813,278.5769 Q92.9063,278.5769 93.5,278.3113 Q94.0938,278.03 94.7188,277.4519 L94.7188,280.1706 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="36" x="112.25" y="278.6843">BTree</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="220" y1="290.53" y2="290.53"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="298.53"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="86" x="27" y="304.7404">root_ : Node_t*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="311.3347"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="27" y="317.5451">kExpectedTreeHeight : size_t</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="220" y1="324.1394" y2="324.1394"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="348.9441"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="27" y="355.1545">SearchLearfNode() : NodeStack_t</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="361.7488"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="27" y="367.9592">SearchLeftmostLeaf() : Node_t *</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="374.5534"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="27" y="380.7639">Split() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="387.3581"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="393.5686">Merge() : void</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="8" x2="69.5" y1="338.5417" y2="338.5417"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="69.5" y="341.8498">Utility Functions</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="158.5" x2="220" y1="338.5417" y2="338.5417"/><ellipse cx="18" cy="419.9675" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="27" y="423.1779">Read() : payload</text><ellipse cx="18" cy="432.7722" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="435.9826">Scan() : RecordIterator</text><ellipse cx="18" cy="445.5769" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="27" y="448.7873">Write() : ReturnCode</text><ellipse cx="18" cy="458.3816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="27" y="461.592">Insert() : ReturnCode</text><ellipse cx="18" cy="471.1863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="474.3967">Update() : ReturnCode</text><ellipse cx="18" cy="483.9909" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="27" y="487.2014">Delete() : ReturnCode</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="8" x2="102" y1="406.5652" y2="406.5652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="102" y="409.8733">APIs</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="126" x2="220" y1="406.5652" y2="406.5652"/><!--MD5=[3fee75583bb7a64f68d843a3c9534ab3]
class Node--><rect codeLine="20" fill="#FEFECE" filter="url(#ffoj3mazkzles)" height="640.2109" id="Node" style="stroke:#A80036;stroke-width:1.5;" width="274" x="473" y="56.03"/><ellipse cx="589.25" cy="72.03" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M592.2188,77.6706 Q591.6406,77.9675 591,78.1081 Q590.3594,78.2644 589.6563,78.2644 Q587.1563,78.2644 585.8281,76.6237 Q584.5156,74.9675 584.5156,71.8425 Q584.5156,68.7175 585.8281,67.0612 Q587.1563,65.405 589.6563,65.405 Q590.3594,65.405 591,65.5612 Q591.6563,65.7175 592.2188,66.0144 L592.2188,68.7331 Q591.5938,68.155 591,67.8894 Q590.4063,67.6081 589.7813,67.6081 Q588.4375,67.6081 587.75,68.6862 Q587.0625,69.7487 587.0625,71.8425 Q587.0625,73.9362 587.75,75.0144 Q588.4375,76.0769 589.7813,76.0769 Q590.4063,76.0769 591,75.8112 Q591.5938,75.53 592.2188,74.9519 L592.2188,77.6706 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="33" x="609.75" y="76.1843">Node</text><line style="stroke:#A80036;stroke-width:1.5;" x1="474" x2="746" y1="88.03" y2="88.03"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="96.03"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="493" y="102.2404">is_leaf_ : uint16_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="108.8347"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="493" y="115.0451">record_count_ : uint16_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="121.6394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="493" y="127.8498">block_size_ : uint16_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="134.4441"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="493" y="140.6545">deleted_size_ : uint16_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="147.2487"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="493" y="153.4592">next_ : Node_t*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="160.0534"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="493" y="166.2639">high_meta_ : Metadata</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="172.8581"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="493" y="179.0686">meta_array_ : Metadata[]</text><line style="stroke:#A80036;stroke-width:1.0;" x1="474" x2="746" y1="185.6628" y2="185.6628"/><ellipse cx="484" cy="213.4675" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="493" y="216.6779">IsRangeInclude() : bool</text><ellipse cx="484" cy="226.2722" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="493" y="229.4826">CanMerge() : bool</text><ellipse cx="484" cy="239.0769" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="493" y="242.2873">IsLeaf() : bool</text><ellipse cx="484" cy="251.8816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="493" y="255.092">GetRecordCount() : size_t</text><ellipse cx="484" cy="264.6863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="493" y="267.8967">GetNextNode() : Node_t*</text><ellipse cx="484" cy="277.4909" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="493" y="280.7014">GetMetaData() : Metadata</text><ellipse cx="484" cy="290.2956" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="493" y="293.5061">GetKey() : key</text><ellipse cx="484" cy="303.1003" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="493" y="306.3108">GetHighKey() : key</text><ellipse cx="484" cy="315.905" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="493" y="319.1154">GetPayload() : payload</text><ellipse cx="484" cy="328.7097" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="493" y="331.9201">GetRecord() : pair&lt;key, payload&gt;</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="474" x2="588.5" y1="200.0652" y2="200.0652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="588.5" y="203.3733">Getters</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="631.5" x2="746" y1="200.0652" y2="200.0652"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="355.3191"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="493" y="361.5295">SetKey() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="368.1238"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="493" y="374.3342">SetPayload() : void</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="474" x2="589" y1="344.9167" y2="344.9167"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="589" y="348.2248">Setters</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="631" x2="746" y1="344.9167" y2="344.9167"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="397.7331"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="493" y="403.9436">GetKeyAddr() : void *</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="410.5378"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="493" y="416.7483">GetPayloadAddr() : void *</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="423.3425"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="493" y="429.5529">IsRightmostOf() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="436.1472"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="493" y="442.3576">SetData() : size_t</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="448.9519"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="493" y="455.1623">GetSpaceStatus() : ReturnCode</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="461.7566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="493" y="467.967">CopyKeyFrom() : size_t</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="474.5613"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="493" y="480.7717">CopyHighKeyFrom() : size_t</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="487.3659"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="493" y="493.5764">CopyRecordFrom() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="481" y="500.1706"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="493" y="506.3811">CopyRecordsFrom() : size_t</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="474" x2="565.5" y1="387.3308" y2="387.3308"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="565.5" y="390.6389">Utility Functions</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="654.5" x2="746" y1="387.3308" y2="387.3308"/><ellipse cx="484" cy="532.78" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="493" y="535.9904">SearchRecord() : pair&lt;ReturnCode, size_t&gt;</text><ellipse cx="484" cy="545.5847" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="493" y="548.7951">SearchChild() : size_t</text><ellipse cx="484" cy="558.3894" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="493" y="561.5998">SearchEndPositionFor() : pair&lt;bool, size_t&gt;</text><ellipse cx="484" cy="571.1941" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="493" y="574.4045">Read() : ReturnCode</text><ellipse cx="484" cy="583.9988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="493" y="587.2092">Write() : ReturnCode</text><ellipse cx="484" cy="596.8034" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="493" y="600.0139">Insert() : ReturnCode</text><ellipse cx="484" cy="609.6081" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="493" y="612.8186">Update() : ReturnCode</text><ellipse cx="484" cy="622.4128" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="493" y="625.6233">Delete() : ReturnCode</text><ellipse cx="484" cy="635.2175" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="493" y="638.4279">InsertChild() : ReturnCode</text><ellipse cx="484" cy="648.0222" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="493" y="651.2326">DeleteChild() : ReturnCode</text><ellipse cx="484" cy="660.8269" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="493" y="664.0373">Consolidate() : void</text><ellipse cx="484" cy="673.6316" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="493" y="676.842">Split() : void</text><ellipse cx="484" cy="686.4363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="493" y="689.6467">Merge() : void</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="474" x2="598" y1="519.3777" y2="519.3777"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="598" y="522.6858">APIs</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="622" x2="746" y1="519.3777" y2="519.3777"/><!--MD5=[7d2c4ae7970c32f414f93e7b18676929]
class Metadata--><rect codeLine="69" fill="#FEFECE" filter="url(#ffoj3mazkzles)" height="209.6563" id="Metadata" style="stroke:#A80036;stroke-width:1.5;" width="180" x="800" y="271.03"/><ellipse cx="855.75" cy="287.03" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M858.7188,292.6706 Q858.1406,292.9675 857.5,293.1081 Q856.8594,293.2644 856.1563,293.2644 Q853.6563,293.2644 852.3281,291.6238 Q851.0156,289.9675 851.0156,286.8425 Q851.0156,283.7175 852.3281,282.0613 Q853.6563,280.405 856.1563,280.405 Q856.8594,280.405 857.5,280.5613 Q858.1563,280.7175 858.7188,281.0144 L858.7188,283.7331 Q858.0938,283.155 857.5,282.8894 Q856.9063,282.6081 856.2813,282.6081 Q854.9375,282.6081 854.25,283.6863 Q853.5625,284.7488 853.5625,286.8425 Q853.5625,288.9363 854.25,290.0144 Q854.9375,291.0769 856.2813,291.0769 Q856.9063,291.0769 857.5,290.8113 Q858.0938,290.53 858.7188,289.9519 L858.7188,292.6706 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="876.25" y="291.1843">Metadata</text><line style="stroke:#A80036;stroke-width:1.5;" x1="801" x2="979" y1="303.03" y2="303.03"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="808" y="311.03"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="820" y="317.2404">offset_ : uint32_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="808" y="323.8347"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="820" y="330.0451">key_length_: uint32_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="808" y="336.6394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="820" y="342.8498">total_length_: uint32_t</text><line style="stroke:#A80036;stroke-width:1.0;" x1="801" x2="979" y1="349.4441" y2="349.4441"/><ellipse cx="811" cy="377.2488" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="820" y="380.4592">GetOffset() : size_t</text><ellipse cx="811" cy="390.0534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="820" y="393.2639">GetKeyLength() : size_t</text><ellipse cx="811" cy="402.8581" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="820" y="406.0686">GetTotalLength() : size_t</text><ellipse cx="811" cy="415.6628" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="820" y="418.8733">GetPayloadLength() : size_t</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="801" x2="868.5" y1="363.8464" y2="363.8464"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="868.5" y="367.1545">Getters</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="911.5" x2="979" y1="363.8464" y2="363.8464"/><ellipse cx="811" cy="445.2722" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="820" y="448.4826">SetOffset() : void</text><ellipse cx="811" cy="458.0769" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="820" y="461.2873">SetKeyLength() : void</text><ellipse cx="811" cy="470.8816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="820" y="474.092">SetTotalLength(): void</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="801" x2="869" y1="431.8698" y2="431.8698"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="869" y="435.1779">Setters</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="911" x2="979" y1="431.8698" y2="431.8698"/><!--MD5=[b15da4c01a4fc70c285fc86d71ef3bc1]
class RecordIterator--><rect codeLine="85" fill="#FEFECE" filter="url(#ffoj3mazkzles)" height="209.6563" id="RecordIterator" style="stroke:#A80036;stroke-width:1.5;" width="181" x="256.5" y="271.03"/><ellipse cx="297.6" cy="287.03" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M300.5688,292.6706 Q299.9906,292.9675 299.35,293.1081 Q298.7094,293.2644 298.0063,293.2644 Q295.5063,293.2644 294.1781,291.6238 Q292.8656,289.9675 292.8656,286.8425 Q292.8656,283.7175 294.1781,282.0613 Q295.5063,280.405 298.0063,280.405 Q298.7094,280.405 299.35,280.5613 Q300.0063,280.7175 300.5688,281.0144 L300.5688,283.7331 Q299.9438,283.155 299.35,282.8894 Q298.7563,282.6081 298.1313,282.6081 Q296.7875,282.6081 296.1,283.6863 Q295.4125,284.7488 295.4125,286.8425 Q295.4125,288.9363 296.1,290.0144 Q296.7875,291.0769 298.1313,291.0769 Q298.7563,291.0769 299.35,290.8113 Q299.9438,290.53 300.5688,289.9519 L300.5688,292.6706 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="91" x="317.4" y="291.1843">RecordIterator</text><line style="stroke:#A80036;stroke-width:1.5;" x1="257.5" x2="436.5" y1="303.03" y2="303.03"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="264.5" y="311.03"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="276.5" y="317.2404">node_ : Node_t*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="264.5" y="323.8347"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="276.5" y="330.0451">record_count_ : size_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="264.5" y="336.6394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="276.5" y="342.8498">current_pos_ : size_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="264.5" y="349.4441"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="276.5" y="355.6545">end_key_ : pair&lt;key, bool&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="264.5" y="362.2488"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="276.5" y="368.4592">is_end_ : bool</text><line style="stroke:#A80036;stroke-width:1.0;" x1="257.5" x2="436.5" y1="375.0534" y2="375.0534"/><ellipse cx="267.5" cy="402.8581" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="276.5" y="406.0686">*() : pair&lt;key, payload&gt;</text><ellipse cx="267.5" cy="415.6628" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="276.5" y="418.8733">++() : void</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="257.5" x2="319" y1="389.4558" y2="389.4558"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="319" y="392.7639">operators</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="375" x2="436.5" y1="389.4558" y2="389.4558"/><ellipse cx="267.5" cy="445.2722" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="276.5" y="448.4826">HasNext() : bool</text><ellipse cx="267.5" cy="458.0769" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="276.5" y="461.2873">GetKey() : key</text><ellipse cx="267.5" cy="470.8816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="276.5" y="474.092">GetPayload() : payload</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="257.5" x2="325.5" y1="431.8698" y2="431.8698"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="325.5" y="435.1779">Getters</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="368.5" x2="436.5" y1="431.8698" y2="431.8698"/><!--MD5=[da9ff4fccb4ef076e9e0a79de934988d]
link BTree to Node--><path codeLine="101" d="M125.39,258.1 C140.46,175.77 175.43,72.59 256.5,26.03 C291.38,6 402.62,6 437.5,26.03 C450.69,33.61 462.9,42.55 474.19,52.56 " fill="none" id="BTree-to-Node" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="477.99,56,473.9762,47.0061,474.2735,52.6552,468.6245,52.9525,477.99,56" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="117.8403" y="247.5195">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="466.8023" y="45.3895">1</text><!--MD5=[1a2d2e6c58a5698430ca9e43fbf9816d]
link Node to Metadata--><path codeLine="102" d="M747.27,376.03 C763.04,376.03 778.82,376.03 794.6,376.03 " fill="none" id="Node-to-Metadata" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="799.95,376.03,790.95,372.03,794.95,376.03,790.95,380.03,799.95,376.03" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="754.9957" y="372.6846">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="783.8676" y="372.4728">1</text><!--MD5=[fb7add3d04029a548e9a9a347d9aecd1]
link Node to Node--><path codeLine="103" d="M747.3,266.89 C767.98,283.71 782,320.09 782,376.03 C782,428.47 769.68,463.72 751.1,481.79 " fill="none" id="Node-to-Node" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="747.3,485.17,756.6777,482.1603,751.0299,481.8402,751.3501,476.1924,747.3,485.17" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="755.0273" y="257.576">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="16" x="754.792" y="487.4757">0..</text><!--MD5=[ff25ba72b4478c0d22f6633328b047f8]
link RecordIterator to Node--><path codeLine="104" d="M437.66,376.03 C447.6,376.03 457.54,376.03 467.47,376.03 " fill="none" id="RecordIterator-to-Node" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="472.67,376.03,463.67,372.03,467.67,376.03,463.67,380.03,472.67,376.03" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="445.499" y="372.4955">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="456.941" y="372.6846">1</text><!--MD5=[27e1a4a03699615b863073ed7ebcaa66]
@startuml

class BTree{
  -root_ : Node_t*
  -kExpectedTreeHeight : size_t
- -
.. Utility Functions ..
  -SearchLearfNode() : NodeStack_t
  -SearchLeftmostLeaf() : Node_t *
  -Split() : void
  -Merge() : void
.. APIs ..
  +Read() : payload
  +Scan() : RecordIterator
  +Write() : ReturnCode
  +Insert() : ReturnCode
  +Update() : ReturnCode
  +Delete() : ReturnCode
}

class Node{
  -is_leaf_ : uint16_t
  -record_count_ : uint16_t
  -block_size_ : uint16_t
  -deleted_size_ : uint16_t
  -next_ : Node_t*
  -high_meta_ : Metadata
  -meta_array_ : Metadata[]
- -
.. Getters ..
  +IsRangeInclude() : bool
  +CanMerge() : bool
  +IsLeaf() : bool
  +GetRecordCount() : size_t
  +GetNextNode() : Node_t*
  +GetMetaData() : Metadata
  +GetKey() : key
  +GetHighKey() : key
  +GetPayload() : payload
  +GetRecord() : pair<key, payload>
.. Setters ..
  -SetKey() : void
  -SetPayload() : void
.. Utility Functions ..
  -GetKeyAddr() : void *
  -GetPayloadAddr() : void *
  -IsRightmostOf() : bool
  -SetData() : size_t
  -GetSpaceStatus() : ReturnCode
  -CopyKeyFrom() : size_t
  -CopyHighKeyFrom() : size_t
  -CopyRecordFrom() : void
  -CopyRecordsFrom() : size_t
.. APIs ..
  +SearchRecord() : pair<ReturnCode, size_t>
  +SearchChild() : size_t
  +SearchEndPositionFor() : pair<bool, size_t>
  +Read() : ReturnCode
  +Write() : ReturnCode
  +Insert() : ReturnCode
  +Update() : ReturnCode
  +Delete() : ReturnCode
  +InsertChild() : ReturnCode
  +DeleteChild() : ReturnCode
  +Consolidate() : void
  +Split() : void
  +Merge() : void
}

class Metadata{
  -offset_ : uint32_t
  -key_length_: uint32_t
  -total_length_: uint32_t
- -
.. Getters ..
  +GetOffset() : size_t
  +GetKeyLength() : size_t
  +GetTotalLength() : size_t
  +GetPayloadLength() : size_t
.. Setters ..
  +SetOffset() : void
  +SetKeyLength() : void
  +SetTotalLength(): void
}

class RecordIterator{
  -node_ : Node_t*
  -record_count_ : size_t
  -current_pos_ : size_t
  -end_key_ : pair<key, bool>
  -is_end_ : bool
- -
.. operators ..
  + *() : pair<key, payload>
  + ++() : void
.. Getters ..
  +HasNext() : bool
  +GetKey() : key
  +GetPayload() : payload
}

BTree "1" -> "1" Node
Node "1" -> "1" Metadata
Node "1" -> "0.." Node
RecordIterator "1" -> "1" Node

@enduml

PlantUML version 1.2022.0(Wed Jan 12 01:16:42 JST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>